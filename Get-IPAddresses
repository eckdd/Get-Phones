function Get-IPAddresses {
<#

/#>

    param
    (
        [parameter(Mandatory=$false,
        ValueFromPipeline=$true,
        ValueFromPipelineByPropertyName=$true
        )]
        [Net.IPAddress]$NetworkID,
        [Net.IPAddress]$SubnetMask,
        [int]$Prefixlength=0
    )
    
    process {

        if ($Prefixlength -ge 32)
        {
            $m4 = 255
        } else
            {
                $m4 = 256 - ([math]::Pow(2,((32 - $Prefixlength))))
            }
    if ($Prefixlength -ge 24)
        {
            $m3 = 255
        } else
            {
                $m3 = 256 - ([math]::Pow(2,((24 - $Prefixlength))))
                $m4 = 0
            }
    if ($Prefixlength -ge 16)
        {
            $m2 = 255
        } else
            {
                $m2 = 256 - ([math]::Pow(2,((16 - $Prefixlength))))
                $m3 = 0
                $m4 = 0
            }
    if ($Prefixlength -ge 8)
        {
            $m1 = 255
        } else
            {
                $m1 = 256 - ([math]::Pow(2,((8 - $Prefixlength))))
                $m2 = 0
                $m3 = 0
                $m4 = 0
            }
            
    [Net.IPAddress]$prefSubnetMask="$m1.$m2.$m3.$m4" 
    if ($prefSubnetMask.ToString() -eq "0.0.0.0") { 
        $SubnetMask = $SubnetMask
            } else { $SubnetMask = $prefSubnetMask }

    [int]$ipOct1          = ((256 - $SubnetMask.GetAddressBytes()[0])) * ([math]::floor(($NetworkID.GetAddressBytes()[0] / (256 - $SubnetMask.GetAddressBytes()[0]))))
    [int]$ipOct2          = ((256 - $SubnetMask.GetAddressBytes()[1])) * ([math]::floor(($NetworkID.GetAddressBytes()[1] / (256 - $SubnetMask.GetAddressBytes()[1]))))
    [int]$ipOct3          = ((256 - $SubnetMask.GetAddressBytes()[2])) * ([math]::floor(($NetworkID.GetAddressBytes()[2] / (256 - $SubnetMask.GetAddressBytes()[2]))))
    [int]$ipOct4          = ((256 - $SubnetMask.GetAddressBytes()[3])) * ([math]::floor(($NetworkID.GetAddressBytes()[3] / (256 - $SubnetMask.GetAddressBytes()[3]))))
    
    [int]$nmOct1          = $SubnetMask.GetAddressBytes()[0]
    [int]$nmOct2          = $SubnetMask.GetAddressBytes()[1]
    [int]$nmOct3          = $SubnetMask.GetAddressBytes()[2]
    [int]$nmOct4          = $SubnetMask.GetAddressBytes()[3]
    
    $ipList = @()
    $ipOct1..($ipOct1+(255-$nmOct1)) | foreach {
        $a = $_ 
        $ipOct2..($ipOct2+(255-$nmOct2)) | foreach {
            $b = $_
            $ipOct3..($ipOct3+(255-$nmOct3)) | foreach {
                $c = $_
                    $ipOct4..($ipOct4+(255-$nmOct4)) | foreach {
                    $d = $_
                    $ipList += "$a.$b.$c.$d"
                                                }
                                                    }
                                                        }
 
                                                               } 
$count           = $ipList.Count

$out             = New-Object -TypeName PSObject
$out | Add-Member -MemberType NoteProperty -Name Network     -Value $ipList[0]
$out | Add-Member -MemberType NoteProperty -Name FirstIP     -Value $ipList[1]
$out | Add-Member -MemberType NoteProperty -Name LastIP      -Value $ipList[($count - 2)]
$out | Add-Member -MemberType NoteProperty -Name Broadcast   -Value $ipList[($count - 1)]

$out | fl

    
            }
}  

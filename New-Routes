Enter file contentsfunction New-Routes {

 param
    (
        [parameter(Mandatory=$true,
        ValueFromPipeline=$false,
        ValueFromPipelineByPropertyName=$false
        )]
        [int]$RouteQty=100,
        [int]$minPref=24,
        [int]$maxPref=30,
        [string]$Protocol="BGP"
    )
    
    process {
    $add = @()
    $i = $RouteQty
    $Loopback = 1000
    while ($i -ge 0) {
        $PrefixLength = Get-Random -Minimum $minPref -Maximum $maxPref

           if ($Prefixlength -ge 32)
        {
            $m4 = 255
        } else
            {
                $m4 = 256 - ([math]::Pow(2,((32 - $Prefixlength))))
            }
    if ($Prefixlength -ge 24)
        {
            $m3 = 255
        } else
            {
                $m3 = 256 - ([math]::Pow(2,((24 - $Prefixlength))))
                $m4 = 0
            }
    if ($Prefixlength -ge 16)
        {
            $m2 = 255
        } else
            {
                $m2 = 256 - ([math]::Pow(2,((16 - $Prefixlength))))
                $m3 = 0
                $m4 = 0
            }
    if ($Prefixlength -ge 8)
        {
            $m1 = 255
        } else
            {
                $m1 = 256 - ([math]::Pow(2,((8 - $Prefixlength))))
                $m2 = 0
                $m3 = 0
                $m4 = 0
            }
    [Net.IPAddress]$prefSubnetMask="$m1.$m2.$m3.$m4" 


    $Oct1 = Get-Random -Minimum 1 -Maximum 223
    $0ct2 = Get-Random -Minimum 0 -Maximum 255
    $0ct3 = Get-Random -Minimum 0 -Maximum 255
    $0ct4 = Get-Random -Minimum 1 -Maximum 254
    [Net.IPAddress]$IPAddress="$Oct1.$0ct2.$0ct3.$0ct4"
    $add += "$IPAddress $prefSubnetMask"
    "interface loopback $Loopback" | Out-File RouteConfig.txt -Append
    " ip address $IPAddress $prefSubnetMask" | Out-File RouteConfig.txt -Append
    "!" | Out-File RouteConfig.txt -Append
    
    
    $Loopback++
    $i--
    }

            if ($Protocol -eq "BGP") {
            "router bgp 999" | Out-File RouteConfig.txt -Append
            $add | foreach { " network $_ " | Out-File RouteConfig.txt -Append }
            "end" | Out-File RouteConfig.txt -Append
            "!" | Out-File RouteConfig.txt -Append
            }
            if ($Protocol -eq "OSPF") {
            "router ospf 999" | Out-File RouteConfig.txt -Append
            " network 0.0.0.0 area 0" | Out-File RouteConfig.txt -Append
            "end" | Out-File RouteConfig.txt -Append
            "!" | Out-File RouteConfig.txt -Append

            }
            if ($Protocol -eq "EIGRP") {
            "router eigrp 999" | Out-File RouteConfig.txt -Append
            " network 0.0.0.0" | Out-File RouteConfig.txt -Append
            "end" | Out-File RouteConfig.txt -Append
            "!" | Out-File RouteConfig.txt -Append
            }

    }
} here
